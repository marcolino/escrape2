- add check ongo dependency and (http://docs.mongodb.org/manual/installation/) start it in deploy script (?)
- make bootswatch theme in index.html configurable (on the server only)
- use `handlebars` for html templating (to have variables in index.html)
- do sync images only for new/changed persons (?)
- try using `callback(new Error('err str'))` instead of `callback('err str')`
- remove 'diff' and 'colors' packages (and all unused packages) at production
- change property 'error' to 'message' when returning err json fom api - NO!
- change property 'error' to 'message' in Error objects
- add status (404, 30x, ...) to all routing errors
- remove status from all route json errors! (and set status only in response)
- add a notification service to client app to show messages (error/warnings/success) to user
- use etag also for html
- avoid re-downloading duplicate images (some way... booh)
- filter just one person out of many who are present *and* have the same phone
- createProviders: move to a function associated to a new route to be called externally (for example by a deploy script)
- bootstrap authentication layout should be fixed size (short) for every screen wifth
- choose http / https in config, if possible
- while authorizing, do not use x-key, but put user *inside* token:
function generateUserToken(user) {
  var expires = expiresIn(7);
  var token = jwt.encode({
  exp: expires,
  user: user // add the user object to the token
}, require('../config/secret')());
- use etag also for persons urls, and check if we can skip syncPersonsImages for unchanged persons
- person.sync: get 'category' attribute too (CM, ...)
- try to move db methods from controllers/xxx.js to models/xxx.js
- follow http://stackoverflow.com/questions/34682277/mongodb-a-query-issue/34687799#34687799 advise:
   var currentUserId = '123...';
   var personIds = db.userToPerson.distinct("personId", { _id: currentUserId });
   var personsRatedByCurrentUser = db.person.find({ _id: {$in, personIds}});
- use lean in mongo queryes everywhere it's possible
- move gethead.js to a method in network.js, to check if resource did change etag *quickly*
- use isNew / isChanged (person.isUrlPageChanged || person.isSomeFieldChanged) in controllers/images.js
- use syncSeries also for images sync (to avoid new images duplication of SGI/cover.jpg and SGI/cover-thumb.jpg)
- when token is expired, we should not get fatal errors (persons.html should be visible...)
- when token is expired and then login done, the message 'login again please...' should be hidden

V remove all "err.context = " lines
V use `test.server.local` (in `/etc/hosts`) @home too
V use https://bootswatch.com/ for bootstrap themes
V NOTE: ENOSPC => echo fs.inotify.max_user_watches && echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
V adopt less
V use all lowercase for errors
V use 'use strict' everywhere
V uninstall module 'socket.io', if not used for tailable cursor view
V add `"save_on_focus_lost": true` to sublimetext - preferences - settings - user
V how to share config among node api and angular frontend? (backend builds config for frontend?) (we don't need it)
V add public.dist to .githignore
V use private names for images, to avoid overwriting changed images...
V check why there are persons images with no correspondence in db...
V where to put common code (i.e.: `function inArray(arr, obj) { return (arr.indexOf(obj) != -1); }` ) ? (in a module, if not in lodash)
V put "persons sync finished" at the real end
V profile with process.hrtime() *all* image functions
V remove line in api/controllters/person.js: "//person.alias = null;"  (to avoid having persons with no alias, at some point in time)
V add whenImageChangesUrlChangesToo: true, to config.providers
V why reviews sync for phone '3804627715' collects 1974 posts, many topics from GF, when there is 1 topic with 3 posts on GF? (could not sync asyncrhronosly reviews while syncing persons)
V why review-EA did not find any review for phone '3279474060' (EA active flag was set to false)
V always add topic.pageLast to EA reviews



Statistics @office:
Full,     both-versions                     saveToDb persons images sync with eachSeries(persons), each(imageUrls): 79 seconds
Full,     both-versions                     saveToDb persons images sync with each      (persons), each(imageUrls): 66 seconds
Full,     both-versions                  no saveToDb persons images sync with each      (persons), each(imageUrls): 65 seconds
Full,     full-version-only saveToFs,    no saveToDb persons images sync with each      (persons), each(imageUrls): 41 seconds
Full, showcase-version-only saveToFs,    no saveToDb persons images sync with each      (persons), each(imageUrls): 38 seconds
Full,     both-versions     no-saveToFs, no saveToDb persons images sync with each      (persons), each(imageUrls): 23 seconds
Full,                       no saveToFs, no saveToDb persons images sync with each      (persons), each(imageUrls): 21 seconds
